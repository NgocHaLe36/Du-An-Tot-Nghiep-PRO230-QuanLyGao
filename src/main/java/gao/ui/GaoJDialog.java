/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gao.ui;

import gao.dao.GaoDAO;
import gao.dao.LoaiGaoDAO;
import gao.dao.impl.ChiTietHoaDonDAOimpl;
import gao.dao.impl.GaoDAOimpl;
import gao.dao.impl.LoaiGaoDAOimpl;
import gao.entity.ChiTietHoaDon;
import gao.entity.Gao;
import gao.entity.HoaDon;
import gao.entity.LoaiGao;
import gao.util.XDialog;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import lombok.Setter;

/**
 *
 * @author lengh
 */
public class GaoJDialog extends javax.swing.JDialog implements GaoController {

    private ChiTietHoaDon detail;

    public ChiTietHoaDon getBillDetail() {
        return detail;
    }

    /**
     * Creates new form GaoJDialog
     */
    public GaoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrinks = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCategories = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(242, 221, 207));

        tblDrinks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã", "Tên đồ uống", "Đơn giá", "Giảm giá"
            }
        ));
        tblDrinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDrinksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDrinks);

        tblCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Loại gạo "
            }
        ));
        tblCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCategories);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriesMouseClicked

        this.fillGao();
    }//GEN-LAST:event_tblCategoriesMouseClicked

    private void tblDrinksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDrinksMouseClicked
        if (evt.getClickCount() == 1) {
            this.addGaoToHoaDon();
        }
    }//GEN-LAST:event_tblDrinksMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        open();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GaoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GaoJDialog dialog = new GaoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCategories;
    private javax.swing.JTable tblDrinks;
    // End of variables declaration//GEN-END:variables
@Setter
    HoaDon bill;

    List<LoaiGao> loaiGaos = List.of();
    List<Gao> gaos = List.of();

    GaoDAO gaoDao = new GaoDAOimpl();

    @Override
    public void open() {
        this.setLocationRelativeTo(null);
        this.fillLoaiGao();
        this.fillGao();
    }

    @Override
    public void fillLoaiGao() {
        LoaiGaoDAO loaiGaoDAO = new LoaiGaoDAOimpl();
        loaiGaos = loaiGaoDAO.findAll();

        DefaultTableModel model = (DefaultTableModel) tblCategories.getModel();
        model.setRowCount(0);
        for (LoaiGao lg : loaiGaos) {
            model.addRow(new Object[]{lg.getTenLoai()});
        }

        if (!loaiGaos.isEmpty()) {
            tblCategories.setRowSelectionInterval(0, 0);
        }
    }

    @Override
    public void fillGao() {
        LoaiGao loai = loaiGaos.get(tblCategories.getSelectedRow());

        GaoDAO gaoDao = new GaoDAOimpl();
        gaos = gaoDao.findByLoaiId(loai.getMaLoai());

        DefaultTableModel model = (DefaultTableModel) tblDrinks.getModel(); // tblDrinks = bảng hiển thị gạo
        model.setRowCount(0);

        gaos.forEach(g -> {
            Object[] row = {
                g.getMaGao(),
                g.getTenGao(),
                String.format("%,.0f", g.getGia()),
                String.format("%.0f%%", g.getGiamGia())
            };
            model.addRow(row);
        });
    }

    @Override
    public void addGaoToHoaDon() {
        int row = tblDrinks.getSelectedRow();
        if (row == -1) {
            XDialog.alert("Vui lòng chọn sản phẩm gạo!");
            return;
        }

        Gao gao = gaos.get(row);
        String input = XDialog.prompt("Nhập số lượng:");
        if (input == null || input.isBlank()) {
            return;
        }

        try {
            int soLuong = Integer.parseInt(input);
            if (soLuong <= 0) {
                throw new NumberFormatException();
            }

            ChiTietHoaDon cthd = new ChiTietHoaDon();
            cthd.setMaHD(bill.getMaHd());
            cthd.setMaGao(gao.getMaGao());
            cthd.setDonGia(gao.getGia());
            cthd.setGiamGia(gao.getGiamGia());
            cthd.setSoLuong(soLuong);

            new ChiTietHoaDonDAOimpl().create(cthd);
            XDialog.alert("Đã thêm vào hóa đơn!");
        } catch (NumberFormatException e) {
            XDialog.alert("Số lượng không hợp lệ!");
        }
    }

    @Override
    public void setHoaDon(HoaDon hoadon) {
        this.bill = hoadon;
    }
}
